mkdir - создать папку в директории
cd - перейти в директорию
git init - иницилизация гит в папке 
git status - проверка отслеживаемых файлов
git add File1- добавление файла File1 в список отслеживаемых в гите
git add -  добавление всех файлов в текущей папке
git add *.java - добавление всех .java фйлов в текущей  папке
git add someDir/*.java - добавление всех .java файлов из конкретной папки someDir
git add someDir/ - добавление всех файлов из папки someDir
git add "*.java" - добавление всех файлов с расширением .java из всего проекта
git commit -m "comment" - фиксация изменений файлов и комментарий к изменениям от автора
git log - позволяет посмотреть всю историю изменений коммитов(файлов)
git diff - показывает разницу между текущим неотслеживаемым состоянием репозитория и последним снимком(коммитом) репозитория
git diff --staged - показывает разницу между текущим отслеживаемым состоянием репозиторияи последним снимком(коммитом) репозитория 
git diff COMMIT_ID - показывает разницу между текущим состоянием репозитория и указанным по хештэгу снимком(коммитом) репозитория
git reset - отмена каких-либо изменений в проекте, откат к какому-либо снимку(коммиту)
HEAD^ - (указатель в порядке коммитов) на 1 коммит назад
HEAD~2 - на 2 коммита в прошлое
git reset --soft - самый мягкий не радикальный, все коммиты остаются отслеживаемы
git reset --mixed - используется по умолчанию, коммиты переходят в неотслеживаемое состояние
git reset --hard - самый радикальный откат, удаляются файлы и переписывается история
git reset --soft HEAD~2 - мягкий откат на 2 коммита назад
git checkout - для перемещения между коммитами, версиями файлов, ветками
git checkout HEAD^ - перемещение на коммит назад без удалений, просто для просмотра
git commit -a -добавляет в коммит все изменения в существующих файлах в отслеживаемой зоне
git commit --amend - изменяет последний коммит, а не создает новый, можно добавить небольшие изменения
git clean -n - показывает какие новые неотслеживаемые файлы будут удалены
git clean -f - удаление новых неотслеживаемых файлов
git remote -v - просмотр списка существующих удаленных репозиториев
git remote add NAME ADRESS -добавить новый удаленный репозиторий с именем NAME который находится по адресу ADRESS, на нашем компе будет обращаться к нему по названию NAME
git remote remove NAME - удалить репозиорий с именем NAME
git push NAME master - отправка локального репозитория на удаленный GitHub
git pull NAME master - вытягивать изменения из удаленного репозитория с GitHUB

